{
  "address": "0x10427841eC3fFB8F3C3045E90DC55D2E028DA676",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        },
        {
          "internalType": "contract IERC721Metadata",
          "name": "complianceNFT_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenIssuer_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldComplianceId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newComplianceId",
          "type": "uint256"
        }
      ],
      "name": "ComplianceUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenIssuer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "complianceId",
          "type": "uint256"
        }
      ],
      "name": "NewComplianceIssued",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenHolder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "complianceId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "accepted",
          "type": "bool"
        }
      ],
      "name": "NewComplianceSignedOff",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "acceptComplianceUpdate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "complianceNFT",
      "outputs": [
        {
          "internalType": "contract IERC721Metadata",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "complianceURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "currentComplianceURI",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "pendingComplianceURI",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentComplianceId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "declineComplianceUpdate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "issueTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingComplianceId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingComplianceSignOffCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokenHolderCompliance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenHoldersCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenIssuer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newComplianceId",
          "type": "uint256"
        }
      ],
      "name": "updateCompliance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xce7d593780787e204a26662dc57024d9af15c060e5dde288e5111df9928f02c1",
  "receipt": {
    "to": null,
    "from": "0x2280C50eF73550b7Ac71AaCd1d6485B3120c2c46",
    "contractAddress": "0x10427841eC3fFB8F3C3045E90DC55D2E028DA676",
    "transactionIndex": 6,
    "gasUsed": "1303917",
    "logsBloom": "0x
    "blockHash": "0xc9abd03ce75cbe071db44800b73a7542854086adee568c38921123e94fd29bf0",
    "transactionHash": "0xce7d593780787e204a26662dc57024d9af15c060e5dde288e5111df9928f02c1",
    "logs": [],
    "blockNumber": 27996629,
    "cumulativeGasUsed": "2174429",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "Compliant Token",
    "CTT",
    "0x2f156a641fb4cdbdc30232e6af96658301dbd203",
    "0x2280C50eF73550b7Ac71AaCd1d6485B3120c2c46"
  ],
  "numDeployments": 2,
  "solcInputHash": "c980e6c8e8c0781f088c58baf10e3f5c",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"contract IERC721Metadata\",\"name\":\"complianceNFT_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenIssuer_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldComplianceId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newComplianceId\",\"type\":\"uint256\"}],\"name\":\"ComplianceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenIssuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"complianceId\",\"type\":\"uint256\"}],\"name\":\"NewComplianceIssued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"complianceId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"accepted\",\"type\":\"bool\"}],\"name\":\"NewComplianceSignedOff\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptComplianceUpdate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"complianceNFT\",\"outputs\":[{\"internalType\":\"contract IERC721Metadata\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"complianceURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"currentComplianceURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"pendingComplianceURI\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentComplianceId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"declineComplianceUpdate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"issueTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingComplianceId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingComplianceSignOffCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenHolderCompliance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenHoldersCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenIssuer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newComplianceId\",\"type\":\"uint256\"}],\"name\":\"updateCompliance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CompliantERC20.sol\":\"CompliantERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/CompliantERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity =0.8.17;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\\\";\\n\\ncontract CompliantERC20 is ERC20 {\\n    IERC721Metadata public complianceNFT;\\n    address public tokenIssuer;\\n\\n    uint256 public currentComplianceId;\\n    uint256 public pendingComplianceId;\\n    uint256 public tokenHoldersCount;\\n    uint256 public pendingComplianceSignOffCount;\\n    mapping (address => uint256) public tokenHolderCompliance;\\n\\n    event NewComplianceIssued(address tokenIssuer, uint256 complianceId);\\n    event NewComplianceSignedOff(address tokenHolder, uint256 complianceId, bool accepted);\\n    event ComplianceUpdated(uint256 oldComplianceId, uint256 newComplianceId);\\n\\n    modifier onlyTokenIssuer {\\n        require(msg.sender == tokenIssuer, \\\"Not token issuer\\\");\\n        _;\\n    }\\n\\n    constructor(string memory name_, string memory symbol_, IERC721Metadata complianceNFT_, address tokenIssuer_) ERC20 (name_, symbol_) {\\n        complianceNFT = complianceNFT_;\\n        tokenIssuer = tokenIssuer_;\\n    }\\n\\n    function updateCompliance(uint256 newComplianceId) external onlyTokenIssuer {\\n        require(newComplianceId > 0, \\\"Compliance id cannot be zero\\\");\\n        require(complianceNFT.ownerOf(newComplianceId) == tokenIssuer, \\\"Should be issued by token issuer\\\");\\n\\n        // Set it directly for the first time set\\n        if (currentComplianceId == 0) {\\n            currentComplianceId = newComplianceId;\\n            return;\\n        }\\n\\n        pendingComplianceId = newComplianceId;\\n\\n        // Token Issuer accept the compliance update by default\\n        if (balanceOf(tokenIssuer) > 0) {\\n            acceptComplianceUpdate();\\n        }\\n\\n        emit NewComplianceIssued(tokenIssuer, newComplianceId);\\n    }\\n\\n    function issueTokens(address to, uint256 amount) external onlyTokenIssuer {\\n        require(currentComplianceId != 0, \\\"Compliance should be set at first\\\");\\n        require(amount > 0, \\\"Invalid issue amount\\\");\\n\\n        _mint(to, amount);\\n    }\\n\\n    function acceptComplianceUpdate() public {\\n        tokenHolderCompliance[msg.sender] = pendingComplianceId;\\n        _updateComplianceStatus();\\n\\n        emit NewComplianceSignedOff(msg.sender, pendingComplianceId, true);\\n    }\\n\\n    function declineComplianceUpdate() external {\\n        _updateComplianceStatus();\\n\\n        emit NewComplianceSignedOff(msg.sender, pendingComplianceId, false);\\n    }\\n\\n    function complianceURI() external view returns (string memory currentComplianceURI, string memory pendingComplianceURI) {\\n        currentComplianceURI = complianceNFT.tokenURI(currentComplianceId);\\n        pendingComplianceURI = \\\"\\\";\\n        if (pendingComplianceId != 0) {\\n            pendingComplianceURI = complianceNFT.tokenURI(pendingComplianceId);\\n        }\\n    }\\n\\n    function _updateComplianceStatus() private {\\n        require(pendingComplianceId != 0, \\\"Not pending compliance to signoff\\\");\\n        require(balanceOf(msg.sender) > 0 || msg.sender == tokenIssuer, \\\"Only valid token holders could accept\\\");\\n        pendingComplianceSignOffCount = pendingComplianceSignOffCount + 1;\\n        if (pendingComplianceSignOffCount == tokenHoldersCount) {\\n            emit ComplianceUpdated(currentComplianceId, pendingComplianceId);\\n            currentComplianceId = pendingComplianceId;\\n            pendingComplianceId = 0;\\n            pendingComplianceSignOffCount = 0;\\n        }\\n    }\\n\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal override virtual {\\n        require(pendingComplianceId == 0, \\\"Transfer not allowed when pending compliance exists\\\");\\n\\n        if (tokenHolderCompliance[from] != currentComplianceId && from != address(0)) {\\n            require(to == tokenIssuer, \\\"Token holder who declines the change in terms and conditions only can transfer tokens to token issuer\\\");\\n        }\\n        // New token holders accept the latest compliance by default\\n        if (tokenHolderCompliance[to] == 0 && amount > 0) {\\n            tokenHolderCompliance[to] = currentComplianceId;\\n            tokenHoldersCount = tokenHoldersCount + 1;\\n        } else {\\n            require(tokenHolderCompliance[to] == currentComplianceId, \\\"Tokens can only be transfered to token holders accept the latest compliance\\\");\\n        }\\n    }\\n\\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal override virtual {\\n        to;\\n        amount;\\n        if (balanceOf(from) == 0 && from != address(0)) {\\n            tokenHoldersCount = tokenHoldersCount - 1;\\n            tokenHolderCompliance[from] = 0;\\n        }\\n    }\\n}\",\"keccak256\":\"0x9836816a5952dd163969037b4f87109ab563047679f769fa94960fbe9750f7ed\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200183c3803806200183c83398101604081905262000034916200016d565b8383600362000044838262000290565b50600462000053828262000290565b5050600580546001600160a01b039485166001600160a01b0319918216179091556006805493909416921691909117909155506200035c915050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620000b757600080fd5b81516001600160401b0380821115620000d457620000d46200008f565b604051601f8301601f19908116603f01168101908282118183101715620000ff57620000ff6200008f565b816040528381526020925086838588010111156200011c57600080fd5b600091505b8382101562000140578582018301518183018401529082019062000121565b600093810190920192909252949350505050565b6001600160a01b03811681146200016a57600080fd5b50565b600080600080608085870312156200018457600080fd5b84516001600160401b03808211156200019c57600080fd5b620001aa88838901620000a5565b95506020870151915080821115620001c157600080fd5b50620001d087828801620000a5565b9350506040850151620001e38162000154565b6060860151909250620001f68162000154565b939692955090935050565b600181811c908216806200021657607f821691505b6020821081036200023757634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200028b57600081815260208120601f850160051c81016020861015620002665750805b601f850160051c820191505b81811015620002875782815560010162000272565b5050505b505050565b81516001600160401b03811115620002ac57620002ac6200008f565b620002c481620002bd845462000201565b846200023d565b602080601f831160018114620002fc5760008415620002e35750858301515b600019600386901b1c1916600185901b17855562000287565b600085815260208120601f198616915b828110156200032d578886015182559484019460019091019084016200030c565b50858210156200034c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6114d0806200036c6000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806370a08231116100c3578063dd62ed3e1161007c578063dd62ed3e1461029d578063e4f3fe04146102b0578063e8b45671146102d0578063f243c2a7146102e3578063f3953d1d146102f6578063f49801901461030c57600080fd5b806370a082311461023557806395d89b411461025e578063a457c2d714610266578063a9059cbb14610279578063b6ece93d1461028c578063c364e70b1461029557600080fd5b8063313ce56711610115578063313ce567146101e357806339509351146101f25780634265868614610205578063475a9fa91461020e5780634787513a1461022357806350c06c7a1461022c57600080fd5b806306fdde0314610152578063095ea7b31461017057806318160ddd1461019357806323b872dd146101a55780632e32ae34146101b8575b600080fd5b61015a610314565b604051610167919061120b565b60405180910390f35b61018361017e36600461123a565b6103a6565b6040519015158152602001610167565b6002545b604051908152602001610167565b6101836101b3366004611266565b6103c0565b6005546101cb906001600160a01b031681565b6040516001600160a01b039091168152602001610167565b60405160128152602001610167565b61018361020036600461123a565b6103e4565b610197600a5481565b61022161021c36600461123a565b610406565b005b61019760095481565b61019760075481565b6101976102433660046112a7565b6001600160a01b031660009081526020819052604090205490565b61015a610509565b61018361027436600461123a565b610518565b61018361028736600461123a565b610593565b61019760085481565b6102216105a1565b6101976102ab3660046112c4565b610604565b6101976102be3660046112a7565b600b6020526000908152604090205481565b6102216102de3660046112fd565b61062f565b6006546101cb906001600160a01b031681565b6102fe61081c565b604051610167929190611316565b61022161093a565b60606003805461032390611344565b80601f016020809104026020016040519081016040528092919081815260200182805461034f90611344565b801561039c5780601f106103715761010080835404028352916020019161039c565b820191906000526020600020905b81548152906001019060200180831161037f57829003601f168201915b5050505050905090565b6000336103b4818585610984565b60019150505b92915050565b6000336103ce858285610aa8565b6103d9858585610b22565b506001949350505050565b6000336103b48185856103f78383610604565b6104019190611394565b610984565b6006546001600160a01b031633146104585760405162461bcd60e51b815260206004820152601060248201526f2737ba103a37b5b2b71034b9b9bab2b960811b60448201526064015b60405180910390fd5b6007546000036104b45760405162461bcd60e51b815260206004820152602160248201527f436f6d706c69616e63652073686f756c642062652073657420617420666972736044820152601d60fa1b606482015260840161044f565b600081116104fb5760405162461bcd60e51b8152602060048201526014602482015273125b9d985b1a59081a5cdcdd5948185b5bdd5b9d60621b604482015260640161044f565b6105058282610cd7565b5050565b60606004805461032390611344565b600033816105268286610604565b9050838110156105865760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161044f565b6103d98286868403610984565b6000336103b4818585610b22565b600854336000908152600b60205260409020556105bc610daa565b6008546040805133815260208101929092526001908201527f9068aa7c30fb8d6b3f3d214eea3163da47bbdb60a1210da9f0ec5e8ff2adebbf906060015b60405180910390a1565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6006546001600160a01b0316331461067c5760405162461bcd60e51b815260206004820152601060248201526f2737ba103a37b5b2b71034b9b9bab2b960811b604482015260640161044f565b600081116106cc5760405162461bcd60e51b815260206004820152601c60248201527f436f6d706c69616e63652069642063616e6e6f74206265207a65726f00000000604482015260640161044f565b6006546005546040516331a9108f60e11b8152600481018490526001600160a01b039283169290911690636352211e90602401602060405180830381865afa15801561071c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074091906113a7565b6001600160a01b0316146107965760405162461bcd60e51b815260206004820181905260248201527f53686f756c642062652069737375656420627920746f6b656e20697373756572604482015260640161044f565b6007546000036107a557600755565b60088190556006546001600160a01b0316600090815260208190526040902054156107d2576107d26105a1565b600654604080516001600160a01b039092168252602082018390527f0f9601a75279425b447aacfbaed79267555d94a3b06d22eb5bbf71b0b5f02caa910160405180910390a15b50565b60055460075460405163c87b56dd60e01b815260609283926001600160a01b039091169163c87b56dd916108569160040190815260200190565b600060405180830381865afa158015610873573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261089b91908101906113da565b91506040518060200160405280600081525090506008546000146109365760055460085460405163c87b56dd60e01b81526001600160a01b039092169163c87b56dd916108ee9160040190815260200190565b600060405180830381865afa15801561090b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261093391908101906113da565b90505b9091565b610942610daa565b6008546040805133815260208101929092526000908201527f9068aa7c30fb8d6b3f3d214eea3163da47bbdb60a1210da9f0ec5e8ff2adebbf906060016105fa565b6001600160a01b0383166109e65760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161044f565b6001600160a01b038216610a475760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161044f565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610ab48484610604565b90506000198114610b1c5781811015610b0f5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161044f565b610b1c8484848403610984565b50505050565b6001600160a01b038316610b865760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161044f565b6001600160a01b038216610be85760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161044f565b610bf3838383610efb565b6001600160a01b03831660009081526020819052604090205481811015610c6b5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161044f565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610b1c84848461115a565b6001600160a01b038216610d2d5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161044f565b610d3960008383610efb565b8060026000828254610d4b9190611394565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36105056000838361115a565b600854600003610e065760405162461bcd60e51b815260206004820152602160248201527f4e6f742070656e64696e6720636f6d706c69616e636520746f207369676e6f666044820152603360f91b606482015260840161044f565b336000908152602081905260408120541180610e2c57506006546001600160a01b031633145b610e865760405162461bcd60e51b815260206004820152602560248201527f4f6e6c792076616c696420746f6b656e20686f6c6465727320636f756c64206160448201526418d8d95c1d60da1b606482015260840161044f565b600a54610e94906001611394565b600a8190556009549003610ef9577fad030208e1f808a587c5efc67874932285f017f368afc5e1e6d08222be611324600754600854604051610ee0929190918252602082015260400190565b60405180910390a160088054600755600090819055600a555b565b60085415610f675760405162461bcd60e51b815260206004820152603360248201527f5472616e73666572206e6f7420616c6c6f776564207768656e2070656e64696e6044820152726720636f6d706c69616e63652065786973747360681b606482015260840161044f565b6007546001600160a01b0384166000908152600b602052604090205414801590610f9957506001600160a01b03831615155b15611055576006546001600160a01b038381169116146110555760405162461bcd60e51b815260206004820152606560248201527f546f6b656e20686f6c6465722077686f206465636c696e65732074686520636860448201527f616e676520696e207465726d7320616e6420636f6e646974696f6e73206f6e6c60648201527f792063616e207472616e7366657220746f6b656e7320746f20746f6b656e206960848201526439b9bab2b960d91b60a482015260c40161044f565b6001600160a01b0382166000908152600b602052604090205415801561107b5750600081115b156110b2576007546001600160a01b0383166000908152600b60205260409020556009546110aa906001611394565b600955505050565b6007546001600160a01b0383166000908152600b6020526040902054146111555760405162461bcd60e51b815260206004820152604b60248201527f546f6b656e732063616e206f6e6c79206265207472616e73666572656420746f60448201527f20746f6b656e20686f6c646572732061636365707420746865206c617465737460648201526a20636f6d706c69616e636560a81b608482015260a40161044f565b505050565b6001600160a01b03831660009081526020819052604090205415801561118857506001600160a01b03831615155b1561115557600160095461119c9190611487565b60095550506001600160a01b03166000908152600b6020526040812055565b60005b838110156111d65781810151838201526020016111be565b50506000910152565b600081518084526111f78160208601602086016111bb565b601f01601f19169290920160200192915050565b60208152600061121e60208301846111df565b9392505050565b6001600160a01b038116811461081957600080fd5b6000806040838503121561124d57600080fd5b823561125881611225565b946020939093013593505050565b60008060006060848603121561127b57600080fd5b833561128681611225565b9250602084013561129681611225565b929592945050506040919091013590565b6000602082840312156112b957600080fd5b813561121e81611225565b600080604083850312156112d757600080fd5b82356112e281611225565b915060208301356112f281611225565b809150509250929050565b60006020828403121561130f57600080fd5b5035919050565b60408152600061132960408301856111df565b828103602084015261133b81856111df565b95945050505050565b600181811c9082168061135857607f821691505b60208210810361137857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156103ba576103ba61137e565b6000602082840312156113b957600080fd5b815161121e81611225565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156113ec57600080fd5b815167ffffffffffffffff8082111561140457600080fd5b818401915084601f83011261141857600080fd5b81518181111561142a5761142a6113c4565b604051601f8201601f19908116603f01168101908382118183101715611452576114526113c4565b8160405282815287602084870101111561146b57600080fd5b61147c8360208301602088016111bb565b979650505050505050565b818103818111156103ba576103ba61137e56fea2646970667358221220fc9155504dcccec8b181633b49e4b40885ddd9b748f3e10ff5d2923a31c5c38864736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061014d5760003560e01c806370a08231116100c3578063dd62ed3e1161007c578063dd62ed3e1461029d578063e4f3fe04146102b0578063e8b45671146102d0578063f243c2a7146102e3578063f3953d1d146102f6578063f49801901461030c57600080fd5b806370a082311461023557806395d89b411461025e578063a457c2d714610266578063a9059cbb14610279578063b6ece93d1461028c578063c364e70b1461029557600080fd5b8063313ce56711610115578063313ce567146101e357806339509351146101f25780634265868614610205578063475a9fa91461020e5780634787513a1461022357806350c06c7a1461022c57600080fd5b806306fdde0314610152578063095ea7b31461017057806318160ddd1461019357806323b872dd146101a55780632e32ae34146101b8575b600080fd5b61015a610314565b604051610167919061120b565b60405180910390f35b61018361017e36600461123a565b6103a6565b6040519015158152602001610167565b6002545b604051908152602001610167565b6101836101b3366004611266565b6103c0565b6005546101cb906001600160a01b031681565b6040516001600160a01b039091168152602001610167565b60405160128152602001610167565b61018361020036600461123a565b6103e4565b610197600a5481565b61022161021c36600461123a565b610406565b005b61019760095481565b61019760075481565b6101976102433660046112a7565b6001600160a01b031660009081526020819052604090205490565b61015a610509565b61018361027436600461123a565b610518565b61018361028736600461123a565b610593565b61019760085481565b6102216105a1565b6101976102ab3660046112c4565b610604565b6101976102be3660046112a7565b600b6020526000908152604090205481565b6102216102de3660046112fd565b61062f565b6006546101cb906001600160a01b031681565b6102fe61081c565b604051610167929190611316565b61022161093a565b60606003805461032390611344565b80601f016020809104026020016040519081016040528092919081815260200182805461034f90611344565b801561039c5780601f106103715761010080835404028352916020019161039c565b820191906000526020600020905b81548152906001019060200180831161037f57829003601f168201915b5050505050905090565b6000336103b4818585610984565b60019150505b92915050565b6000336103ce858285610aa8565b6103d9858585610b22565b506001949350505050565b6000336103b48185856103f78383610604565b6104019190611394565b610984565b6006546001600160a01b031633146104585760405162461bcd60e51b815260206004820152601060248201526f2737ba103a37b5b2b71034b9b9bab2b960811b60448201526064015b60405180910390fd5b6007546000036104b45760405162461bcd60e51b815260206004820152602160248201527f436f6d706c69616e63652073686f756c642062652073657420617420666972736044820152601d60fa1b606482015260840161044f565b600081116104fb5760405162461bcd60e51b8152602060048201526014602482015273125b9d985b1a59081a5cdcdd5948185b5bdd5b9d60621b604482015260640161044f565b6105058282610cd7565b5050565b60606004805461032390611344565b600033816105268286610604565b9050838110156105865760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161044f565b6103d98286868403610984565b6000336103b4818585610b22565b600854336000908152600b60205260409020556105bc610daa565b6008546040805133815260208101929092526001908201527f9068aa7c30fb8d6b3f3d214eea3163da47bbdb60a1210da9f0ec5e8ff2adebbf906060015b60405180910390a1565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6006546001600160a01b0316331461067c5760405162461bcd60e51b815260206004820152601060248201526f2737ba103a37b5b2b71034b9b9bab2b960811b604482015260640161044f565b600081116106cc5760405162461bcd60e51b815260206004820152601c60248201527f436f6d706c69616e63652069642063616e6e6f74206265207a65726f00000000604482015260640161044f565b6006546005546040516331a9108f60e11b8152600481018490526001600160a01b039283169290911690636352211e90602401602060405180830381865afa15801561071c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074091906113a7565b6001600160a01b0316146107965760405162461bcd60e51b815260206004820181905260248201527f53686f756c642062652069737375656420627920746f6b656e20697373756572604482015260640161044f565b6007546000036107a557600755565b60088190556006546001600160a01b0316600090815260208190526040902054156107d2576107d26105a1565b600654604080516001600160a01b039092168252602082018390527f0f9601a75279425b447aacfbaed79267555d94a3b06d22eb5bbf71b0b5f02caa910160405180910390a15b50565b60055460075460405163c87b56dd60e01b815260609283926001600160a01b039091169163c87b56dd916108569160040190815260200190565b600060405180830381865afa158015610873573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261089b91908101906113da565b91506040518060200160405280600081525090506008546000146109365760055460085460405163c87b56dd60e01b81526001600160a01b039092169163c87b56dd916108ee9160040190815260200190565b600060405180830381865afa15801561090b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261093391908101906113da565b90505b9091565b610942610daa565b6008546040805133815260208101929092526000908201527f9068aa7c30fb8d6b3f3d214eea3163da47bbdb60a1210da9f0ec5e8ff2adebbf906060016105fa565b6001600160a01b0383166109e65760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161044f565b6001600160a01b038216610a475760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161044f565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610ab48484610604565b90506000198114610b1c5781811015610b0f5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161044f565b610b1c8484848403610984565b50505050565b6001600160a01b038316610b865760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161044f565b6001600160a01b038216610be85760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161044f565b610bf3838383610efb565b6001600160a01b03831660009081526020819052604090205481811015610c6b5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161044f565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610b1c84848461115a565b6001600160a01b038216610d2d5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161044f565b610d3960008383610efb565b8060026000828254610d4b9190611394565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36105056000838361115a565b600854600003610e065760405162461bcd60e51b815260206004820152602160248201527f4e6f742070656e64696e6720636f6d706c69616e636520746f207369676e6f666044820152603360f91b606482015260840161044f565b336000908152602081905260408120541180610e2c57506006546001600160a01b031633145b610e865760405162461bcd60e51b815260206004820152602560248201527f4f6e6c792076616c696420746f6b656e20686f6c6465727320636f756c64206160448201526418d8d95c1d60da1b606482015260840161044f565b600a54610e94906001611394565b600a8190556009549003610ef9577fad030208e1f808a587c5efc67874932285f017f368afc5e1e6d08222be611324600754600854604051610ee0929190918252602082015260400190565b60405180910390a160088054600755600090819055600a555b565b60085415610f675760405162461bcd60e51b815260206004820152603360248201527f5472616e73666572206e6f7420616c6c6f776564207768656e2070656e64696e6044820152726720636f6d706c69616e63652065786973747360681b606482015260840161044f565b6007546001600160a01b0384166000908152600b602052604090205414801590610f9957506001600160a01b03831615155b15611055576006546001600160a01b038381169116146110555760405162461bcd60e51b815260206004820152606560248201527f546f6b656e20686f6c6465722077686f206465636c696e65732074686520636860448201527f616e676520696e207465726d7320616e6420636f6e646974696f6e73206f6e6c60648201527f792063616e207472616e7366657220746f6b656e7320746f20746f6b656e206960848201526439b9bab2b960d91b60a482015260c40161044f565b6001600160a01b0382166000908152600b602052604090205415801561107b5750600081115b156110b2576007546001600160a01b0383166000908152600b60205260409020556009546110aa906001611394565b600955505050565b6007546001600160a01b0383166000908152600b6020526040902054146111555760405162461bcd60e51b815260206004820152604b60248201527f546f6b656e732063616e206f6e6c79206265207472616e73666572656420746f60448201527f20746f6b656e20686f6c646572732061636365707420746865206c617465737460648201526a20636f6d706c69616e636560a81b608482015260a40161044f565b505050565b6001600160a01b03831660009081526020819052604090205415801561118857506001600160a01b03831615155b1561115557600160095461119c9190611487565b60095550506001600160a01b03166000908152600b6020526040812055565b60005b838110156111d65781810151838201526020016111be565b50506000910152565b600081518084526111f78160208601602086016111bb565b601f01601f19169290920160200192915050565b60208152600061121e60208301846111df565b9392505050565b6001600160a01b038116811461081957600080fd5b6000806040838503121561124d57600080fd5b823561125881611225565b946020939093013593505050565b60008060006060848603121561127b57600080fd5b833561128681611225565b9250602084013561129681611225565b929592945050506040919091013590565b6000602082840312156112b957600080fd5b813561121e81611225565b600080604083850312156112d757600080fd5b82356112e281611225565b915060208301356112f281611225565b809150509250929050565b60006020828403121561130f57600080fd5b5035919050565b60408152600061132960408301856111df565b828103602084015261133b81856111df565b95945050505050565b600181811c9082168061135857607f821691505b60208210810361137857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156103ba576103ba61137e565b6000602082840312156113b957600080fd5b815161121e81611225565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156113ec57600080fd5b815167ffffffffffffffff8082111561140457600080fd5b818401915084601f83011261141857600080fd5b81518181111561142a5761142a6113c4565b604051601f8201601f19908116603f01168101908382118183101715611452576114526113c4565b8160405282815287602084870101111561146b57600080fd5b61147c8360208301602088016111bb565b979650505050505050565b818103818111156103ba576103ba61137e56fea2646970667358221220fc9155504dcccec8b181633b49e4b40885ddd9b748f3e10ff5d2923a31c5c38864736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 15,
        "contract": "contracts/CompliantERC20.sol:CompliantERC20",
        "label": "_balances",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 21,
        "contract": "contracts/CompliantERC20.sol:CompliantERC20",
        "label": "_allowances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 23,
        "contract": "contracts/CompliantERC20.sol:CompliantERC20",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 25,
        "contract": "contracts/CompliantERC20.sol:CompliantERC20",
        "label": "_name",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 27,
        "contract": "contracts/CompliantERC20.sol:CompliantERC20",
        "label": "_symbol",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 875,
        "contract": "contracts/CompliantERC20.sol:CompliantERC20",
        "label": "complianceNFT",
        "offset": 0,
        "slot": "5",
        "type": "t_contract(IERC721Metadata)832"
      },
      {
        "astId": 877,
        "contract": "contracts/CompliantERC20.sol:CompliantERC20",
        "label": "tokenIssuer",
        "offset": 0,
        "slot": "6",
        "type": "t_address"
      },
      {
        "astId": 879,
        "contract": "contracts/CompliantERC20.sol:CompliantERC20",
        "label": "currentComplianceId",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 881,
        "contract": "contracts/CompliantERC20.sol:CompliantERC20",
        "label": "pendingComplianceId",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 883,
        "contract": "contracts/CompliantERC20.sol:CompliantERC20",
        "label": "tokenHoldersCount",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      },
      {
        "astId": 885,
        "contract": "contracts/CompliantERC20.sol:CompliantERC20",
        "label": "pendingComplianceSignOffCount",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      },
      {
        "astId": 889,
        "contract": "contracts/CompliantERC20.sol:CompliantERC20",
        "label": "tokenHolderCompliance",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(IERC721Metadata)832": {
        "encoding": "inplace",
        "label": "contract IERC721Metadata",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}